//#include<iostream>
#include<bits/stdc++.h>
using namespace std;

int static t[101][101];
int LCS(string x,string y,int m,int n){
    
    //using memoization
   memset(t,-1,sizeof(t));
   if(m==0 || n==0){
       return 0;
   }
   if(t[m][n]!=-1)
     return t[m][n];
   if(x[m]==y[n])
   return 1+LCS(x,y,m-1,n-1);
   else{
       
       return max(LCS(x,y,m-1,n),LCS(x,y,m,n-1));
   }
}
int main(){
    string x,y;
    cout<<"Enter first string:"<<endl;
    cin>>x;
    cout<<"Enter second string:"<<endl;
    cin>>y;
    int m=x.length();
    int n=y.length();
    cout<<"Length of longest common subsequence:"<<LCS(x,y,m,n)<<endl;
    
}
