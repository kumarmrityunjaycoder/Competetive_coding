#include <bits/stdc++.h>
using namespace std;
int knapsack(int val_arr[],int wt_arr[],int W, int n){
    if(W == 0 || n == 0)
          return 0;
    if(W >= wt_arr[n-1])
       return max((val_arr[n-1]+knapsack(val_arr,wt_arr,W-wt_arr[n-1],n-1)), 
                   knapsack(val_arr,wt_arr,W,n-1));
    else if(wt_arr[n]>W)
        return  knapsack(val_arr,wt_arr,W,n-1);
}

int main(){
   int val_arr[]={10,15,40};
    int wt_arr[]={1,2,3};
    int N = (sizeof(val_arr)/sizeof(val_arr[0]));
    int W = 6;
    int maximum_profit = knapsack(val_arr,wt_arr,W,N);
    cout << "The maximum profit of the Knapsake problem is:" << maximum_profit <<endl;
    
}
