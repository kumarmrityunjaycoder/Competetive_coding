#include<iostream>
using namespace std;

bool EqualSumPartitionSum(int arr[],int target,int n){
    bool t[n+1][target+1];
    for(int i=0;i<n+1;i++){
        for(int j=0;j<target+1;j++){
            if(i==0)
            t[i][j]==false;
            
            if(j==0)
            t[i][j]==true;
        }
    }
    
    for(int i=1;i<n+1;i++){
        for(int j=1;j<target+1;j++){
            
            if(j>=arr[i-1])
                   t[i][j]=(t[i-1][j-arr[i-1]] || t[i-1][j]);
            
            else if(j<arr[i-1])
                    t[i][j]=t[i-1][j];
        }
    }
    return t[n][target];
}

int main(){
    int sum=0;
    int arr[]={3,2,3,11,1};
    int n = sizeof(arr)/sizeof(arr[0]);
    for(int i=0;i<n;i++){
       sum=sum+arr[i];
       
    }
    if(sum%2==0){
       if(EqualSumPartitionSum(arr,sum/2,n)!=true){
           cout<<"Equal partition is found in set"<<endl;
       }
       else{
           cout<<"Equal partition is not found in set"<<endl;
       }
    }
    else{
        cout<<"Equal partition is not possible "<<endl;
    }
}






